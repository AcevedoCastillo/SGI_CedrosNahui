@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

        <img src="https://i.ibb.co/LXy30Tx3/photo-2024-09-29-21-10-51.jpg"
             alt="Imagen"
             style="height:50px; width:auto; border-radius:10px; object-fit:cover;" />

        <MudText Typo="Typo.h5" Class="ml-3">Cedros Nahuizalqueños</MudText>

        <MudSpacer />

        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        @if (isLoggedIn)
        {
            <MudButton Color="Color.Error" OnClick="Logout">Cerrar Sesión</MudButton>
        }
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;
    private bool isLoggedIn = false;
    private bool _initialized = false;



    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };

        SetDrawerStateBasedOnUri();
        NavigationManager.LocationChanged += (_, __) =>
        {
            SetDrawerStateBasedOnUri();
            InvokeAsync(StateHasChanged);
        };
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initialized)
        {
            _initialized = true;

            if (await LocalStorage.ContainKeyAsync("loggedIn"))
            {
                isLoggedIn = await LocalStorage.GetItemAsync<bool>("loggedIn");
                StateHasChanged(); // fuerza redibujado con el valor cargado
            }
        }
    }
    private void SetDrawerStateBasedOnUri()
    {
        var uri = NavigationManager.Uri.ToLower();
        // Ajusta esta condición según tus rutas de login
        if (uri.EndsWith("/client/") || uri.Contains("/client/login"))
            _drawerOpen = false; // cerrar drawer en login
        else
            _drawerOpen = true; // abrir drawer en otras páginas
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("loggedIn");
        isLoggedIn = false;

        NavigationManager.NavigateTo("/client/login", forceLoad: true);
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };


}
